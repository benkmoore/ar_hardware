# Teensy setup notes

1. Test functioning Teensy: https://www.pjrc.com/teensy/first_use.html

2. Download Teensyduino, Version 1.52 to jetson from: https://www.pjrc.com/teensy/td_download.html
Follow instructions. Note: Download Arduino 1.8.12/latest tested support. (We need to determine which libraries are needed so we don't install them all for production)

3. Extract arduino dowloaded files. Install Arduino IDE by running ./installArduinoIDE.sh 

4. Check Teensey Board is visable in Arduino IDE -> Tools -> Board and select Teensy 4.0 

5. Install Teensy loader for command line from source. Follow instructions: https://www.pjrc.com/teensy/loader_cli.html

6. Compile test_stepperMotor.ino in ArduinoIDE using Sketch -> Compile. Load onto teesny: Press load button on teensy (need to use command line for this later using teensy_loader_cli).

7. Setup port for teensy in ArudinoIDE Tools -> Port, select Teensy. Tools -> Serial Monitor, outputs console of teensy programs. Good way to check program is running correctly on teensy.

8. NOTE: For stepper motors adjust voltage across motor driver, DRV8825: see video at this link: https://youtu.be/89BHS9hfSUk, more info on DRV8825: https://www.pololu.com/product/2133. Aim for 0.5V or less (rotation appears smoothest at 0.35V)


-----------------------------------------------------------------------------------------------------

# Setup for ROS msgs over Teensy

1. Install ROS serial communication package for arduino. For more details o the isntall commands below see: http://wiki.ros.org/rosserial_arduino/Tutorials/Arduino%20IDE%20Setup

To install ROS serial pkgs run the following commands:
sudo apt-get install ros-melodic-rosserial-arduino

sudo apt-get install ros-melodic-rosserial

To install necccesarry ros libarires in the arduino environment run the following commands:
cd Arduino/libraries
rosrun rosserial_arduino make_libraries.py .

To check install:
Restart ArduinoIDE -> File -> Examples -> ros_lib -> Hello_world

2. Add teensy 4.0 serial functionality to line 44 in Arduino/libraries/ros_lib/ArduinoHardware.h . See pjrc.com/teensy/loader_cli.html for more info on the names of each MCU/teensy X.X .

Code to append: defined(__IMXRT1062__)

Line 44 should now look like:
#if defined(__MK20DX128__) || defined(__MK20DX256__) || defined(__MK64FX512__) || defined(__MK66FX1M0__) || defined(__MKL26Z64__) || defined(__IMXRT1062__)

3. Add custom AR messages to arduino ros_lib: http://wiki.ros.org/rosserial_arduino/Tutorials/Adding%20Custom%20Messages, using this command

rosrun rosserial_client make_library.py /home/ben/Arduino/ /home/ben/catkin_ws/src/ar_commander/msg


------------------------------------------------------------------------------------------------

# Creating conncetion over usb between teensy node and roscore on jetson

1. Check baud rate on teensy - default is 9600. If baud rate is too high can cause comms issues. Start with 9600 can go higher later and test. Load script onto teensy with teens_loader. 

2. Check teensy port on AarduinoIDe -> Tools -> Port. Check that the port exists: ls /dev/ttyACM0

3. After launching ros master run: rosrun rosserial_python serial_node.py _port:=/dev/ttyACM0 _baud:=9600

make sure the correct port and baud rate is used. If connection succesful will see this:
[INFO] [1593459264.359302]: ROS Serial Python Node
[INFO] [1593459264.368955]: Connecting to /dev/ttyACM0 at 9600 baud
[INFO] [1593459266.475355]: Requesting topics...
[INFO] [1593459269.612953]: Note: subscribe buffer size is 2048 bytes
[INFO] [1593459269.616665]: Setup subscriber on controller_cmds [ar_commander/ControllerCmd]

4. Make sure you have serial monitor closed and no serial print lines in your code. Cant use both the serial usb and serial monitor at the same time. If you do you'll get this error: "Unable to sync with device; possible link problem or link software version mismatch such as hydro rosserial_python with groovy Arduino"

5. Make sure the buffer size is big enough for a backlog of your msgs:

ros::NodeHandle_<HardwareType, MAX_PUBLISHERS=25, MAX_SUBSCRIBERS=25, IN_BUFFER_SIZE=512, OUT_BUFFER_SIZE=512> nh;

More info: http://wiki.ros.org/rosserial/Overview/Initialization






